########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: lib install clean

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

# .SUBDIRS:

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
    core
    typedvec
#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
OCAMLINCLUDES += ../../lib/util ../../lib/rigid_body

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -annot -bin-annot -thread
OCAMLCFLAGS   +=
OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Build an OCaml library
#

FILES[] = $(removesuffix $(ls *ml))
#
LIB = realcaml_closest_point
#
OUTPUTS=$(MyOCamlLibrary $(LIB), $(FILES))

lib: $(OUTPUTS)
	mkdir -p ../../lib/closest_point
	cp $(OUTPUTS) ../../lib/closest_point/

clean: $(OUTPUTS)
	rm -f ../../lib/closest_point/*

.DEFAULT: lib
